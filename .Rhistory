Here's the histogram of the total number of steps taken per day using the **imputed** data.
```{r dailytotal_imputed, echo=TRUE}
activity_imputed <- activitydata
activity_imputed$steps <- ifelse(is.na(activity_imputed$steps), activity_intervalmean[activity_intervalmean$interval==pa$interval,2], pa$steps)
activity_dailytotal_imputed <- aggregate(activity_imputed[,c("steps"),drop=FALSE], list(date=pa$date), sum, na.rm=TRUE)
hist(activity_dailytotal_imputed$steps, breaks=20, main="", xlab = "Number of steps", ylab = "Frequency")
activity_dailytotalmean_imputed <- mean(activity_dailytotal_imputed$steps)
activity_dailytotalmedian_imputed <- as.integer(median(activity_dailytotal_imputed$steps))
```
The mean and median total number of steps taken per day are `r round(activity_dailytotalmean_imputed, digits=2)` and `r activity_dailytotalmedian_imputed` respectively.
<br>
Here's a table showing the mean and median total number of steps taken per day using the original and imputed data.
<br>
<style>
table,th,td
{
border:1px solid black;
}
</style>
<table style="width:300px">
<tr>
<td><b>Data</td>
<td><b>Mean</td>
<td><b>Median</td>
</tr>
<tr>
<td>Original</td>
<td>`r round(activity_dailytotalmean, digits=2)`</td>
<td>`r activity_dailytotalmedian`</td>
</tr>
<tr>
<td>Imputed</td>
<td>`r round(activity_dailytotalmean_imputed, digits=2)`</td>
<td>`r activity_dailytotalmedian_imputed`</td>
</tr>
</table>
The mean total number of steps taken per day using the imputed data are `r ifelse(activity_dailytotalmean_imputed>activity_dailytotalmean, "larger ", "smaller ")`than that using the original data, and the median total number of steps taken per day using the imputed data are `r ifelse(activity_dailytotalmedian_imputed>activity_dailytotalmedian, "larger ", "smaller ")`than that using the original data.
<br>
Here's a panel plot containing time series plots of the 5-minute interval and the average number of steps takenacross all weekday days or weekend days using the **imputed** data.
```{r intervalmean_imputed, echo=TRUE}
activity_imputed$weekdays <- weekdays(activity_imputed$date)
activity_imputed$weekday <- as.factor(ifelse(activity_imputed$weekdays %in% c("Saturday", "Sunday"), "weekend", "weekday"))
activity_intervalmean_imputed <- aggregate(activity_imputed[,c("steps"),drop=FALSE], list(interval=activity_imputed$interval, weekday=activity_imputed$weekday), mean, na.rm=TRUE)
library(lattice)
p <- xyplot(steps ~ interval | weekday, data = activity_intervalmean_imputed, type = "l", layout = c(1, 2), main = "", xlab = "Interval", ylab = "Number of steps")
print(p)
```
<br>
## Are there differences in activity patterns between weekdays and weekends?
library(knitr)
library(markdown)
knit("movement.Rmd") # convert to md
markdownToHTML("movement.md", "movement.html") # convert to HTML
# Reproducible Research: Peer Assessment 1
<br>
## Loading and preprocessing the data
```{r dataclean, echo=TRUE}
activitydata <- read.csv("./data/activity.csv")
activitydata$date <- as.Date(activitydata$date, "%Y-%m-%d")
```
<br>
## What is mean total number of steps taken per day?
```{r dailytotal, echo=TRUE}
activity_dailytotal <- aggregate(activitydata[,c("steps"),drop=FALSE], list(date=activitydata$date), sum, na.rm=TRUE)
activity_dailytotalmean <- mean(activity_dailytotal$steps)
activity_dailytotalmedian <- median(activity_dailytotal$steps)
```
<br>
The mean and median total number of steps taken per day are `r round(activity_dailytotalmean, digits=2)` and `r activity_dailytotalmedian` respectively.
<br>
Histogram of the total number of steps taken per day
```
hist(activity_dailytotal$steps, breaks=20, main="", xlab = "Number of steps", ylab = "Frequency")
```
<br>
## What is the average daily activity pattern?
<br>
Plot of the average number of steps taken across all days by the 5-minute interval.
```{r intervalmean, echo=TRUE}
activitydata_intervalmean <- aggregate(activitydata[,c("steps"),drop=FALSE], list(interval=activitydata$interval), mean, na.rm=TRUE)
plot(activitydata_intervalmean$interval, activitydata_intervalmean$steps, type="l", main = "", xlab = "Interval", ylab = "Number of steps")
activitydata_maxintervalmean <- activitydata_intervalmean[activitydata_intervalmean$steps==max(activitydata_intervalmean$steps),1]
```
The maximum number of steps, `r round(max(activitydata_intervalmean$steps), digits=2)`, occurs in the 5-minute interval that begins at `r sprintf("%02d:%02d", activitydata_maxintervalmean%/%100, activitydata_maxintervalmean%%100)`.
<br>
## Imputing missing values
<br>
The presence of missing values may introduce bias into some calculations or summaries of the data.
```{r missigvalue, echo=TRUE}
activity_countofnasteps <- sum(is.na(pa$steps))
```
In this data set, there are `r activity_countofnasteps` missing steps values across a number of days/intervals. To minimize bias the average number of steps taken across all days by the 5-minute interval is used to impute the missing steps values.
<br>
Here's the histogram of the total number of steps taken per day using the **imputed** data.
```{r dailytotal_imputed, echo=TRUE}
activity_imputed <- activitydata
activity_imputed$steps <- ifelse(is.na(activity_imputed$steps), activity_intervalmean[activity_intervalmean$interval==pa$interval,2], pa$steps)
activity_dailytotal_imputed <- aggregate(activity_imputed[,c("steps"),drop=FALSE], list(date=pa$date), sum, na.rm=TRUE)
hist(activity_dailytotal_imputed$steps, breaks=20, main="", xlab = "Number of steps", ylab = "Frequency")
activity_dailytotalmean_imputed <- mean(activity_dailytotal_imputed$steps)
activity_dailytotalmedian_imputed <- as.integer(median(activity_dailytotal_imputed$steps))
```
The mean and median total number of steps taken per day are `r round(activity_dailytotalmean_imputed, digits=2)` and `r activity_dailytotalmedian_imputed` respectively.
<br>
Here's a table showing the mean and median total number of steps taken per day using the original and imputed data.
<br>
<style>
table,th,td
{
border:1px solid black;
}
</style>
<table style="width:300px">
<tr>
<td><b>Data</td>
<td><b>Mean</td>
<td><b>Median</td>
</tr>
<tr>
<td>Original</td>
<td>`r round(activity_dailytotalmean, digits=2)`</td>
<td>`r activity_dailytotalmedian`</td>
</tr>
<tr>
<td>Imputed</td>
<td>`r round(activity_dailytotalmean_imputed, digits=2)`</td>
<td>`r activity_dailytotalmedian_imputed`</td>
</tr>
</table>
The mean total number of steps taken per day using the imputed data are `r ifelse(activity_dailytotalmean_imputed>activity_dailytotalmean, "larger ", "smaller ")`than that using the original data, and the median total number of steps taken per day using the imputed data are `r ifelse(activity_dailytotalmedian_imputed>activity_dailytotalmedian, "larger ", "smaller ")`than that using the original data.
<br>
Here's a panel plot containing time series plots of the 5-minute interval and the average number of steps takenacross all weekday days or weekend days using the **imputed** data.
```{r intervalmean_imputed, echo=TRUE}
activity_imputed$weekdays <- weekdays(activity_imputed$date)
activity_imputed$weekday <- as.factor(ifelse(activity_imputed$weekdays %in% c("Saturday", "Sunday"), "weekend", "weekday"))
activity_intervalmean_imputed <- aggregate(activity_imputed[,c("steps"),drop=FALSE], list(interval=activity_imputed$interval, weekday=activity_imputed$weekday), mean, na.rm=TRUE)
library(lattice)
p <- xyplot(steps ~ interval | weekday, data = activity_intervalmean_imputed, type = "l", layout = c(1, 2), main = "", xlab = "Interval", ylab = "Number of steps")
print(p)
```
<br>
## Are there differences in activity patterns between weekdays and weekends?
# Reproducible Research: Peer Assessment 1
<br>
## Loading and preprocessing the data
```{r dataclean, echo=TRUE}
activitydata <- read.csv("./data/activity.csv")
activitydata$date <- as.Date(activitydata$date, "%Y-%m-%d")
```
<br>
## What is mean total number of steps taken per day?
```{r dailytotal, echo=TRUE}
activity_dailytotal <- aggregate(activitydata[,c("steps"),drop=FALSE], list(date=activitydata$date), sum, na.rm=TRUE)
activity_dailytotalmean <- mean(activity_dailytotal$steps)
activity_dailytotalmedian <- median(activity_dailytotal$steps)
```
<br>
The mean and median total number of steps taken per day are `r round(activity_dailytotalmean, digits=2)` and `r activity_dailytotalmedian` respectively.
<br>
Histogram of the total number of steps taken per day
```
hist(activity_dailytotal$steps, breaks=20, main="", xlab = "Number of steps", ylab = "Frequency")
```
<br>
## What is the average daily activity pattern?
<br>
Plot of the average number of steps taken across all days by the 5-minute interval.
```{r intervalmean, echo=TRUE}
activitydata_intervalmean <- aggregate(activitydata[,c("steps"),drop=FALSE], list(interval=activitydata$interval), mean, na.rm=TRUE)
plot(activitydata_intervalmean$interval, activitydata_intervalmean$steps, type="l", main = "", xlab = "Interval", ylab = "Number of steps")
activitydata_maxintervalmean <- activitydata_intervalmean[activitydata_intervalmean$steps==max(activitydata_intervalmean$steps),1]
```
The maximum number of steps, `r round(max(activitydata_intervalmean$steps), digits=2)`, occurs in the 5-minute interval that begins at `r sprintf("%02d:%02d", activitydata_maxintervalmean%/%100, activitydata_maxintervalmean%%100)`.
<br>
## Imputing missing values
<br>
The presence of missing values may introduce bias into some calculations or summaries of the data.
```{r missigvalue, echo=TRUE}
activity_countofnasteps <- sum(is.na(activitydata$steps))
```
In this data set, there are `r activity_countofnasteps` missing steps values across a number of days/intervals. To minimize bias the average number of steps taken across all days by the 5-minute interval is used to impute the missing steps values.
<br>
Here's the histogram of the total number of steps taken per day using the **imputed** data.
```{r dailytotal_imputed, echo=TRUE}
activity_imputed <- activitydata
activity_imputed$steps <- ifelse(is.na(activity_imputed$steps), activity_intervalmean[activity_intervalmean$interval==pa$interval,2], pa$steps)
activity_dailytotal_imputed <- aggregate(activity_imputed[,c("steps"),drop=FALSE], list(date=pa$date), sum, na.rm=TRUE)
hist(activity_dailytotal_imputed$steps, breaks=20, main="", xlab = "Number of steps", ylab = "Frequency")
activity_dailytotalmean_imputed <- mean(activity_dailytotal_imputed$steps)
activity_dailytotalmedian_imputed <- as.integer(median(activity_dailytotal_imputed$steps))
```
The mean and median total number of steps taken per day are `r round(activity_dailytotalmean_imputed, digits=2)` and `r activity_dailytotalmedian_imputed` respectively.
<br>
Here's a table showing the mean and median total number of steps taken per day using the original and imputed data.
<br>
<style>
table,th,td
{
border:1px solid black;
}
</style>
<table style="width:300px">
<tr>
<td><b>Data</td>
<td><b>Mean</td>
<td><b>Median</td>
</tr>
<tr>
<td>Original</td>
<td>`r round(activity_dailytotalmean, digits=2)`</td>
<td>`r activity_dailytotalmedian`</td>
</tr>
<tr>
<td>Imputed</td>
<td>`r round(activity_dailytotalmean_imputed, digits=2)`</td>
<td>`r activity_dailytotalmedian_imputed`</td>
</tr>
</table>
The mean total number of steps taken per day using the imputed data are `r ifelse(activity_dailytotalmean_imputed>activity_dailytotalmean, "larger ", "smaller ")`than that using the original data, and the median total number of steps taken per day using the imputed data are `r ifelse(activity_dailytotalmedian_imputed>activity_dailytotalmedian, "larger ", "smaller ")`than that using the original data.
<br>
Here's a panel plot containing time series plots of the 5-minute interval and the average number of steps takenacross all weekday days or weekend days using the **imputed** data.
```{r intervalmean_imputed, echo=TRUE}
activity_imputed$weekdays <- weekdays(activity_imputed$date)
activity_imputed$weekday <- as.factor(ifelse(activity_imputed$weekdays %in% c("Saturday", "Sunday"), "weekend", "weekday"))
activity_intervalmean_imputed <- aggregate(activity_imputed[,c("steps"),drop=FALSE], list(interval=activity_imputed$interval, weekday=activity_imputed$weekday), mean, na.rm=TRUE)
library(lattice)
p <- xyplot(steps ~ interval | weekday, data = activity_intervalmean_imputed, type = "l", layout = c(1, 2), main = "", xlab = "Interval", ylab = "Number of steps")
print(p)
```
<br>
## Are there differences in activity patterns between weekdays and weekends?
library(knitr)
library(markdown)
knit("movement.Rmd") # convert to md
markdownToHTML("movement.md", "movement.html") # convert to HTML
library(knitr)
library(markdown)
knit("movement.Rmd") # convert to md
markdownToHTML("movement.md", "movement.html") # convert to HTML
Reproducible Research - Peer Assessment 1
========================================================
## Introduction
The following analyses used activity data (n=17,568) obtained from a personal activity monitoring device (raw data is available [here](https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip)). The device collects data at 5 minute intervals through out the day. The data consists of two months of data from an anonymous individual collected during the months of October and November in 2012 and include the number of steps taken in 5 minute intervals each day.
## Methods and results
Data is loaded and preprocessed for analysis.
```{r dataclean, echo=TRUE}
pa <- read.csv("activity.csv")
pa$date <- as.Date(pa$date, "%Y-%m-%d")
```
<br>
Here's the histogram of the total number of steps taken per day.
```{r dailytotal, echo=TRUE}
pa_dailytotal <- aggregate(pa[,c("steps"),drop=FALSE], list(date=pa$date), sum, na.rm=TRUE)
hist(pa_dailytotal$steps, breaks=20, main="", xlab = "Number of steps", ylab = "Frequency")
pa_dailytotalmean <- mean(pa_dailytotal$steps)
pa_dailytotalmedian <- median(pa_dailytotal$steps)
```
The mean and median total number of steps taken per day are `r round(pa_dailytotalmean, digits=2)` and `r pa_dailytotalmedian` respectively.
<br>
<br>
<br>
Here's a plot of the average number of steps taken across all days by the 5-minute interval.
```{r intervalmean, echo=TRUE}
pa_intervalmean <- aggregate(pa[,c("steps"),drop=FALSE], list(interval=pa$interval), mean, na.rm=TRUE)
plot(pa_intervalmean$interval, pa_intervalmean$steps, type="l", main = "", xlab = "Interval", ylab = "Number of steps")
pa_maxintervalmean <- pa_intervalmean[pa_intervalmean$steps==max(pa_intervalmean$steps),1]
```
The maximum number of steps, `r round(max(pa_intervalmean$steps), digits=2)`, occurs in the 5-minute interval that begins at `r sprintf("%02d:%02d", pa_maxintervalmean%/%100, pa_maxintervalmean%%100)`.
<br>
<br>
<br>
The presence of missing values may introduce bias into some calculations or summaries of the data.
```{r missigvalue, echo=TRUE}
pa_countofnasteps <- sum(is.na(pa$steps))
```
In this data set, there are `r pa_countofnasteps` missing steps values across a number of days/intervals. To minimize bias the average number of steps taken across all days by the 5-minute interval is used to impute the missing steps values.
<br>
<br>
Here's the histogram of the total number of steps taken per day using the **imputed** data.
```{r dailytotal_imputed, echo=TRUE}
pa_imputed <- pa
pa_imputed$steps <- ifelse(is.na(pa_imputed$steps), pa_intervalmean[pa_intervalmean$interval==pa$interval,2], pa$steps)
pa_dailytotal_imputed <- aggregate(pa_imputed[,c("steps"),drop=FALSE], list(date=pa$date), sum, na.rm=TRUE)
hist(pa_dailytotal_imputed$steps, breaks=20, main="", xlab = "Number of steps", ylab = "Frequency")
pa_dailytotalmean_imputed <- mean(pa_dailytotal_imputed$steps)
pa_dailytotalmedian_imputed <- as.integer(median(pa_dailytotal_imputed$steps))
```
The mean and median total number of steps taken per day are `r round(pa_dailytotalmean_imputed, digits=2)` and `r pa_dailytotalmedian_imputed` respectively.
<br>
<br>
Here's a table showing the mean and median total number of steps taken per day using the original and imputed data.
<br>
<style>
table,th,td
{
border:1px solid black;
}
</style>
<table style="width:300px">
<tr>
<td><b>Data</td>
<td><b>Mean</td>
<td><b>Median</td>
</tr>
<tr>
<td>Original</td>
<td>`r round(pa_dailytotalmean, digits=2)`</td>
<td>`r pa_dailytotalmedian`</td>
</tr>
<tr>
<td>Imputed</td>
<td>`r round(pa_dailytotalmean_imputed, digits=2)`</td>
<td>`r pa_dailytotalmedian_imputed`</td>
</tr>
</table>
The mean total number of steps taken per day using the imputed data are `r ifelse(pa_dailytotalmean_imputed>pa_dailytotalmean, "larger ", "smaller ")`than that using the original data, and the median total number of steps taken per day using the imputed data are `r ifelse(pa_dailytotalmedian_imputed>pa_dailytotalmedian, "larger ", "smaller ")`than that using the original data.
<br>
Here's a panel plot containing time series plots of the 5-minute interval and the average number of steps takenacross all weekday days or weekend days using the **imputed** data.
```{r intervalmean_imputed, echo=TRUE}
pa_imputed$weekdays <- weekdays(pa_imputed$date)
pa_imputed$weekday <- as.factor(ifelse(pa_imputed$weekdays %in% c("Saturday", "Sunday"), "weekend", "weekday"))
pa_intervalmean_imputed <- aggregate(pa_imputed[,c("steps"),drop=FALSE], list(interval=pa_imputed$interval, weekday=pa_imputed$weekday), mean, na.rm=TRUE)
library(lattice)
p <- xyplot(steps ~ interval | weekday, data = pa_intervalmean_imputed, type = "l", layout = c(1, 2), main = "", xlab = "Interval", ylab = "Number of steps")
print(p)
```
library(knitr)
library(markdown)
knit("a.Rmd") # convert to md
markdownToHTML("a.md", "a.html") # convert to HTML
Reproducible Research - Peer Assessment 1
========================================================
## Introduction
The following analyses used activity data (n=17,568) obtained from a personal activity monitoring device (raw data is available [here](https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip)). The device collects data at 5 minute intervals through out the day. The data consists of two months of data from an anonymous individual collected during the months of October and November in 2012 and include the number of steps taken in 5 minute intervals each day.
## Methods and results
Data is loaded and preprocessed for analysis.
```{r dataclean, echo=TRUE}
pa <- read.csv("./data/activity.csv")
pa$date <- as.Date(pa$date, "%Y-%m-%d")
```
<br>
Here's the histogram of the total number of steps taken per day.
```{r dailytotal, echo=TRUE}
pa_dailytotal <- aggregate(pa[,c("steps"),drop=FALSE], list(date=pa$date), sum, na.rm=TRUE)
hist(pa_dailytotal$steps, breaks=20, main="", xlab = "Number of steps", ylab = "Frequency")
pa_dailytotalmean <- mean(pa_dailytotal$steps)
pa_dailytotalmedian <- median(pa_dailytotal$steps)
```
The mean and median total number of steps taken per day are `r round(pa_dailytotalmean, digits=2)` and `r pa_dailytotalmedian` respectively.
<br>
<br>
<br>
Here's a plot of the average number of steps taken across all days by the 5-minute interval.
```{r intervalmean, echo=TRUE}
pa_intervalmean <- aggregate(pa[,c("steps"),drop=FALSE], list(interval=pa$interval), mean, na.rm=TRUE)
plot(pa_intervalmean$interval, pa_intervalmean$steps, type="l", main = "", xlab = "Interval", ylab = "Number of steps")
pa_maxintervalmean <- pa_intervalmean[pa_intervalmean$steps==max(pa_intervalmean$steps),1]
```
The maximum number of steps, `r round(max(pa_intervalmean$steps), digits=2)`, occurs in the 5-minute interval that begins at `r sprintf("%02d:%02d", pa_maxintervalmean%/%100, pa_maxintervalmean%%100)`.
<br>
<br>
<br>
The presence of missing values may introduce bias into some calculations or summaries of the data.
```{r missigvalue, echo=TRUE}
pa_countofnasteps <- sum(is.na(pa$steps))
```
In this data set, there are `r pa_countofnasteps` missing steps values across a number of days/intervals. To minimize bias the average number of steps taken across all days by the 5-minute interval is used to impute the missing steps values.
<br>
<br>
Here's the histogram of the total number of steps taken per day using the **imputed** data.
```{r dailytotal_imputed, echo=TRUE}
pa_imputed <- pa
pa_imputed$steps <- ifelse(is.na(pa_imputed$steps), pa_intervalmean[pa_intervalmean$interval==pa$interval,2], pa$steps)
pa_dailytotal_imputed <- aggregate(pa_imputed[,c("steps"),drop=FALSE], list(date=pa$date), sum, na.rm=TRUE)
hist(pa_dailytotal_imputed$steps, breaks=20, main="", xlab = "Number of steps", ylab = "Frequency")
pa_dailytotalmean_imputed <- mean(pa_dailytotal_imputed$steps)
pa_dailytotalmedian_imputed <- as.integer(median(pa_dailytotal_imputed$steps))
```
The mean and median total number of steps taken per day are `r round(pa_dailytotalmean_imputed, digits=2)` and `r pa_dailytotalmedian_imputed` respectively.
<br>
<br>
Here's a table showing the mean and median total number of steps taken per day using the original and imputed data.
<br>
<style>
table,th,td
{
border:1px solid black;
}
</style>
<table style="width:300px">
<tr>
<td><b>Data</td>
<td><b>Mean</td>
<td><b>Median</td>
</tr>
<tr>
<td>Original</td>
<td>`r round(pa_dailytotalmean, digits=2)`</td>
<td>`r pa_dailytotalmedian`</td>
</tr>
<tr>
<td>Imputed</td>
<td>`r round(pa_dailytotalmean_imputed, digits=2)`</td>
<td>`r pa_dailytotalmedian_imputed`</td>
</tr>
</table>
The mean total number of steps taken per day using the imputed data are `r ifelse(pa_dailytotalmean_imputed>pa_dailytotalmean, "larger ", "smaller ")`than that using the original data, and the median total number of steps taken per day using the imputed data are `r ifelse(pa_dailytotalmedian_imputed>pa_dailytotalmedian, "larger ", "smaller ")`than that using the original data.
<br>
Here's a panel plot containing time series plots of the 5-minute interval and the average number of steps takenacross all weekday days or weekend days using the **imputed** data.
```{r intervalmean_imputed, echo=TRUE}
pa_imputed$weekdays <- weekdays(pa_imputed$date)
pa_imputed$weekday <- as.factor(ifelse(pa_imputed$weekdays %in% c("Saturday", "Sunday"), "weekend", "weekday"))
pa_intervalmean_imputed <- aggregate(pa_imputed[,c("steps"),drop=FALSE], list(interval=pa_imputed$interval, weekday=pa_imputed$weekday), mean, na.rm=TRUE)
library(lattice)
p <- xyplot(steps ~ interval | weekday, data = pa_intervalmean_imputed, type = "l", layout = c(1, 2), main = "", xlab = "Interval", ylab = "Number of steps")
print(p)
```
library(knitr)
library(markdown)
knit("a.Rmd") # convert to md
markdownToHTML("a.md", "a.html") # convert to HTML
Reproducible Research - Peer Assessment 1
========================================================
## Introduction
The following analyses used activity data (n=17,568) obtained from a personal activity monitoring device (raw data is available [here](https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip)). The device collects data at 5 minute intervals through out the day. The data consists of two months of data from an anonymous individual collected during the months of October and November in 2012 and include the number of steps taken in 5 minute intervals each day.
## Methods and results
Data is loaded and preprocessed for analysis.
```{r dataclean, echo=TRUE}
pa <- read.csv("./data/activity.csv")
pa$date <- as.Date(pa$date, "%Y-%m-%d")
```
<br>
Here's the histogram of the total number of steps taken per day.
```{r dailytotal, echo=TRUE}
pa_dailytotal <- aggregate(pa[,c("steps"),drop=FALSE], list(date=pa$date), sum, na.rm=TRUE)
hist(pa_dailytotal$steps, breaks=20, main="", xlab = "Number of steps", ylab = "Frequency")
pa_dailytotalmean <- mean(pa_dailytotal$steps)
pa_dailytotalmedian <- median(pa_dailytotal$steps)
```
The mean and median total number of steps taken per day are `r round(pa_dailytotalmean, digits=2)` and `r pa_dailytotalmedian` respectively.
<br>
<br>
<br>
Here's a plot of the average number of steps taken across all days by the 5-minute interval.
```{r intervalmean, echo=TRUE}
pa_intervalmean <- aggregate(pa[,c("steps"),drop=FALSE], list(interval=pa$interval), mean, na.rm=TRUE)
plot(pa_intervalmean$interval, pa_intervalmean$steps, type="l", main = "", xlab = "Interval", ylab = "Number of steps")
pa_maxintervalmean <- pa_intervalmean[pa_intervalmean$steps==max(pa_intervalmean$steps),1]
```
The maximum number of steps, `r round(max(pa_intervalmean$steps), digits=2)`, occurs in the 5-minute interval that begins at `r sprintf("%02d:%02d", pa_maxintervalmean%/%100, pa_maxintervalmean%%100)`.
<br>
<br>
<br>
The presence of missing values may introduce bias into some calculations or summaries of the data.
```{r missigvalue, echo=TRUE}
pa_countofnasteps <- sum(is.na(pa$steps))
```
In this data set, there are `r pa_countofnasteps` missing steps values across a number of days/intervals. To minimize bias the average number of steps taken across all days by the 5-minute interval is used to impute the missing steps values.
<br>
<br>
Here's the histogram of the total number of steps taken per day using the **imputed** data.
```{r dailytotal_imputed, echo=TRUE}
pa_imputed <- pa
pa_imputed$steps <- ifelse(is.na(pa_imputed$steps), pa_intervalmean[pa_intervalmean$interval==pa$interval,2], pa$steps)
pa_dailytotal_imputed <- aggregate(pa_imputed[,c("steps"),drop=FALSE], list(date=pa$date), sum, na.rm=TRUE)
hist(pa_dailytotal_imputed$steps, breaks=20, main="", xlab = "Number of steps", ylab = "Frequency")
pa_dailytotalmean_imputed <- mean(pa_dailytotal_imputed$steps)
pa_dailytotalmedian_imputed <- as.integer(median(pa_dailytotal_imputed$steps))
```
The mean and median total number of steps taken per day are `r round(pa_dailytotalmean_imputed, digits=2)` and `r pa_dailytotalmedian_imputed` respectively.
<br>
<br>
Here's a table showing the mean and median total number of steps taken per day using the original and imputed data.
<br>
<style>
table,th,td
{
border:1px solid black;
}
</style>
<table style="width:300px">
<tr>
<td><b>Data</td>
<td><b>Mean</td>
<td><b>Median</td>
</tr>
<tr>
<td>Original</td>
<td>`r round(pa_dailytotalmean, digits=2)`</td>
<td>`r pa_dailytotalmedian`</td>
</tr>
<tr>
<td>Imputed</td>
<td>`r round(pa_dailytotalmean_imputed, digits=2)`</td>
<td>`r pa_dailytotalmedian_imputed`</td>
</tr>
</table>
The mean total number of steps taken per day using the imputed data are `r ifelse(pa_dailytotalmean_imputed>pa_dailytotalmean, "larger ", "smaller ")`than that using the original data, and the median total number of steps taken per day using the imputed data are `r ifelse(pa_dailytotalmedian_imputed>pa_dailytotalmedian, "larger ", "smaller ")`than that using the original data.
<br>
Here's a panel plot containing time series plots of the 5-minute interval and the average number of steps takenacross all weekday days or weekend days using the **imputed** data.
```{r intervalmean_imputed, echo=TRUE}
pa_imputed$weekdays <- weekdays(pa_imputed$date)
pa_imputed$weekday <- as.factor(ifelse(pa_imputed$weekdays %in% c("Saturday", "Sunday"), "weekend", "weekday"))
pa_intervalmean_imputed <- aggregate(pa_imputed[,c("steps"),drop=FALSE], list(interval=pa_imputed$interval, weekday=pa_imputed$weekday), mean, na.rm=TRUE)
library(lattice)
p <- xyplot(steps ~ interval | weekday, data = pa_intervalmean_imputed, type = "l", layout = c(1, 2), main = "", xlab = "Interval", ylab = "Number of steps")
print(p)
```
library(knitr)
library(markdown)
knit("a.Rmd") # convert to md
markdownToHTML("a.md", "a.html") # convert to HTML
